vector<vector<int> > Solution::anagrams(const vector<string> &strs) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    vector<vector<int> > ans;
        unordered_map<string, vector<int> > groups;
        for (int i = 0; i < strs.size(); i++) {
            //sort every string and store groups of strings that are anagrams in a map
            string copyString = strs[i];
            sort(copyString.begin(), copyString.end());
            groups[copyString].push_back(i + 1);
        }

        for(unordered_map<string, vector<int> >::iterator it = groups.begin(); it != groups.end(); it++) {
            ans.push_back(it->second);
        }
        return ans;
    
}
